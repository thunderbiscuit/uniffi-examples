import{_ as e,o as t,c as i,V as a}from"./chunks/framework.2af28b0a.js";const _=JSON.parse('{"title":"Supported Languages","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/languages.md","filePath":"getting-started/languages.md"}'),r={name:"getting-started/languages.md"},l=a('<h1 id="supported-languages" tabindex="-1">Supported Languages <a class="header-anchor" href="#supported-languages" aria-label="Permalink to &quot;Supported Languages&quot;">â€‹</a></h1><p>Uniffi natively supports the following languages:</p><ol><li>Kotlin</li><li>Swift</li><li>Python</li><li>Ruby</li></ol><p>You can use these to compose libraries for different use cases:</p><ol><li>Kotlin on JVM server-side</li><li>Kotlin on Android</li><li>Swift on iOS</li><li>Java (though Kotlin interop)</li><li>Kotlin + Swift to generate React Native libraries</li><li>Kotlin + Swift to generate Flutter libraries</li></ol><p>Alternatively, Mozilla is building the uniffi-rs library to allow for a plugin system to emerge and enable further languages to be supported outside the 4 &quot;core&quot; languages already supported. Projects are in the works for:</p><ol><li><a href="https://gitlab.com/trixnity/uniffi-kotlin-multiplatform-bindings" target="_blank" rel="noreferrer">Kotlin Multiplatform</a></li><li><a href="https://github.com/NordSecurity/uniffi-bindgen-go" target="_blank" rel="noreferrer">Go</a></li><li><a href="https://github.com/NordSecurity/uniffi-bindgen-cs" target="_blank" rel="noreferrer">C#</a></li></ol>',7),o=[l];function n(s,u,g,p,d,f){return t(),i("div",null,o)}const h=e(r,[["render",n]]);export{_ as __pageData,h as default};
