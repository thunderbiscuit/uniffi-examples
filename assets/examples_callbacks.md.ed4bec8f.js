import{_ as s,o as a,c as n,V as l}from"./chunks/framework.2af28b0a.js";const i=JSON.parse('{"title":"Callbacks","description":"","frontmatter":{},"headers":[],"relativePath":"examples/callbacks.md","filePath":"examples/callbacks.md"}'),o={name:"examples/callbacks.md"},p=l(`<h1 id="callbacks" tabindex="-1">Callbacks <a class="header-anchor" href="#callbacks" aria-label="Permalink to &quot;Callbacks&quot;">â€‹</a></h1><p>We build callbacks using the following UDL syntax:</p><div class="language-uniffi-udl"><button title="Copy Code" class="copy"></button><span class="lang">uniffi-udl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">callback interface Reminder {</span></span>
<span class="line"><span style="color:#A6ACCD;">  [Throws=CalendarError]</span></span>
<span class="line"><span style="color:#A6ACCD;">  string remind_me();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  [Throws=CalendarError]</span></span>
<span class="line"><span style="color:#A6ACCD;">  void ping_me(Event event);</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span></code></pre></div><p>With the corresponding Rust code:</p><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">trait</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Reminder</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Send</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Sync</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Debug</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">remind_me</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CalendarError</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ping_me</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Result</span><span style="color:#89DDFF;">&lt;(),</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CalendarError</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Note that for callbacks you will need to implement the <code>From&lt;uniffi::UnexpectedUniFFICallbackError&gt;</code> trait on one of your error types in order to handle unexpected callback errors. See the Callback Interfaces section of the handbook for more info.</p><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">impl</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">From</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">uniffi</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnexpectedUniFFICallbackError</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CalendarError</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">uniffi</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnexpectedUniFFICallbackError</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Self </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> Self</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">EventError</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>From the bindings we simply override the <code>remind_me</code> and <code>ping_me</code> methods:</p><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomReminder</span><span style="color:#A6ACCD;"> : </span><span style="color:#FFCB6B;">Reminder</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">fun</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">remindMe</span><span style="color:#A6ACCD;">(): </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;Don&#39;t forget to call your mom!&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">fun</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pingMe</span><span style="color:#A6ACCD;">(event: </span><span style="color:#FFCB6B;">Event</span><span style="color:#A6ACCD;">): </span><span style="color:#FFCB6B;">Unit</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&quot;Don&#39;t forget you have a </span><span style="color:#A6ACCD;">$event</span><span style="color:#C3E88D;"> coming up!&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>See the <a href="https://github.com/thunderbiscuit/uniffi-examples/blob/master/5-callbacks/calendar-kotlin/lib/src/test/kotlin/org/examples/calendar/CalendarTest.kt" target="_blank" rel="noreferrer">tests</a> for more examples.</p>`,10),e=[p];function t(r,c,C,y,A,D){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{i as __pageData,d as default};
